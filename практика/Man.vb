Public Class Man
    Public WaitForLiftN As Byte             'номер лифта из коллекции лифтов, который должен забрать данного человека
    '                   0, если за человеком не закрепили лифт
    Public Const AverageWeight As Byte = 70 'средний вес человека
    Private _Weight As Byte                 'вес человека
    Private _Beginning As Byte              'этаж, на котором находился человек в момент вызова лифта
    Private _Destination As Byte            'этаж, на который хочет попасть человек
    Private _WaitingTime As Integer            'количество тактов ожидания

    '**************************************************************************************************
    'Возвращает количество тактов, в течение которых человек ждал лифт
    'Выход:	количество тактов, тип Byte
    '**************************************************************************************************
    Public Function GetWaitingTime() As Integer
        Return _WaitingTime
    End Function

    '**************************************************************************************************
    'Увеличивает счетчик количества тактов ожидания.
    '**************************************************************************************************
    Public Sub IncreaseWaitingTime()
        _WaitingTime += 1
    End Sub

    '**************************************************************************************************
    'вес человека
    '**************************************************************************************************
    Public ReadOnly Property Weight As Byte
        Get
            Return _Weight
        End Get
    End Property

    '**************************************************************************************************
    'начало пути (этаж, с которого поступает вызов)
    '**************************************************************************************************
    Public ReadOnly Property Beginning As Byte
        Get
            Return _Beginning
        End Get
    End Property

    '**************************************************************************************************
    'конец пути (этаж, на который хочет приехать человек)
    '**************************************************************************************************
    Public ReadOnly Property Destination As Byte
        Get
            Return _Destination
        End Get
    End Property

    '**************************************************************************************************
    'Оператор "=". Сравнение осуществляется по следующим параметрам: начальный этаж, конечный этаж,
    'вес, лифт, который должен обработать запрос
    '**************************************************************************************************
    'Вход:  два объекта типа Man
    '**************************************************************************************************
    'Выход: True - равенство объектов, False - объекты не равны между собой.
    '**************************************************************************************************
    Public Shared Operator =(ByVal M1 As Man, ByVal M2 As Man) As Boolean
        If M1.Beginning <> M2.Beginning Then Return False
        If M1.Destination <> M2.Destination Then Return False
        If M1.Weight <> M2.Weight Then Return False
        If M1.WaitForLiftN <> M2.WaitForLiftN Then Return False
        Return True
    End Operator

    '**************************************************************************************************
    'Оператор "<>". Сравнение осуществляется по следующим параметрам: начальный этаж, конечный этаж,
    'вес, лифт, который должен обработать запрос
    '**************************************************************************************************
    'Вход:  два объекта типа Man
    '**************************************************************************************************
    'Выход: True - объекты не равны между собой, False - равенство объектов.
    '**************************************************************************************************
    Public Shared Operator <>(ByVal M1 As Man, ByVal M2 As Man) As Boolean
        If M1.Beginning = M2.Beginning Then Return False
        If M1.Destination = M2.Destination Then Return False
        If M1.Weight = M2.Weight Then Return False
        If M1.WaitForLiftN = M2.WaitForLiftN Then Return False
        Return True
    End Operator

    '**************************************************************************************************
    'Инициализирует новый экземпляр класса Man
    '**************************************************************************************************
    'Вход:  этаж, на котором будет находится человек в момент вызова лифта, тип Byte
    '       этаж, на который хочет попасть человек, тип Byte
    '       вес человека, тип Byte
    '**************************************************************************************************
    Public Sub New(ByVal MFloorFrom As Byte, ByVal MFloorTo As Byte, ByVal MWeight As Byte)
        _Weight = MWeight
        _Beginning = MFloorFrom
        _Destination = MFloorTo
        WaitForLiftN = 0
    End Sub
End Class


